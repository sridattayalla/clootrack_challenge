{"version":3,"sources":["app/chartReducer.js","App.js","reportWebVitals.js","app/store.js","index.js","helper.js"],"names":["dashboardSlice","createSlice","name","initialState","value","reducers","modifyChart","state","action","temp","index","chart","createState","payload","actions","modifyState","colors","PieChart","props","React","useState","pie","setPie","data","slice","points","setPoints","updateChart","lastAngle","forEach","x","arc_angle","push","describeArc","useEffect","className","width","height","map","e","i","d","fill","style","display","alignItems","gap","marginBottom","backgroundColor","type","min","onChange","change","target","changedBy","length","j","BarChart","setChart","useDispatch","updatePoints","maxPoint","reduce","p","c","last_x","y","x1","y1","x2","y2","stroke","strokeWidth","App","dashboard","useSelector","dispatch","fetch","then","response","json","fontSize","gridTemplateColumns","elements","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","dashboardReducer","ReactDOM","render","StrictMode","store","document","getElementById","polarToCartesian","centerX","centerY","radius","angleInDegrees","angleInRadians","Math","PI","cos","sin","module","exports","startAngle","endAngle","start","end","arcSweep","join"],"mappings":"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","file":"static/js/main.32aa53a3.chunk.js","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\n\nexport const dashboardSlice = createSlice({\n    name: 'dashboard',\n    initialState: {\n        value: []\n    },\n    reducers: {\n        modifyChart: (state, action)=>{\n            let temp = state.value;\n            temp[action.index] = action.chart;\n            state.value = temp;\n        },\n        createState: ((state, action) => {\n            state.value = action.payload;\n        })\n    }\n})\n\nexport const {modifyState, createState} = dashboardSlice.actions\nexport default dashboardSlice.reducer\n","import './App.css';\nimport React from 'react'\nimport {describeArc} from './helper'\nimport {createState} from \"./app/chartReducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nconst colors = ['#003f5c',\n    '#2f4b7c',\n    '#665191',\n    '#a05195',\n    '#d45087',\n    '#f95d6a',\n    '#ff7c43',\n    '#ffa600'];\n\nfunction App() {\n    const dashboard = useSelector(state => state.dashboard.value);\n    const dispatch = useDispatch();\n\n    React.useEffect(() => {\n        fetch('https://s3-ap-southeast-1.amazonaws.com/he-public-data/chart2986176.json')\n            .then(response => response.json())\n            .then(data => {\n                dispatch(createState(data))\n            });\n    }, []);\n\n    return (\n        <div>\n            <span style={{fontSize: \"xx-large\"}}>Charting Dashboard</span>\n            <div style={{display: \"grid\", gridTemplateColumns: \"repeat(3, auto)\"}}>\n                {dashboard.map((e, i) => e.type == 'Pie' ? <div key={i}><PieChart data={e.elements}/></div> :\n                    <div key={i}><BarChart data={e.elements} index={i}/></div>)}\n            </div>\n            <a href={'https://www.hackerearth.com/@sridatta555'}>https://www.hackerearth.com/@sridatta555</a>\n        </div>\n    );\n\n}\n\nfunction PieChart(props) {\n    const [pie, setPie] = React.useState([]);\n    let [points, setPoints] = React.useState(props.data.slice());\n\n    React.useEffect(() => {\n        updateChart();\n    }, [])\n\n    function updateChart() {\n        let temp = [];\n        let lastAngle = 0;\n        points.forEach((x) => {\n            let arc_angle = 360 / 100 * x;\n            temp.push(describeArc(100, 100, 100, lastAngle, lastAngle + arc_angle));\n            lastAngle = lastAngle + arc_angle;\n        })\n        setPie(temp)\n    }\n\n    return (<div className={\"chart\"}>\n            <svg width={200} height={200} className={\"pieChart\"}>\n                {pie.map((e, i) => <path key={i} d={e} fill={colors[i]}></path>)}\n            </svg>\n            <div className={\"tooltip-container\"}>\n                <div className={\"edit-tooltip\"}>\n                    <div>\n                        {points.map((e, i) => <div className={\"eachEdit\"} key={i}>\n                            <div style={{display: \"flex\", alignItems: \"center\", gap: 5, marginBottom: \"0.5rem\"}}>\n                                <div style={{width: '0.7rem', height: '0.7rem', backgroundColor: colors[i]}}></div>\n                                <input type=\"number\" min={0} value={points[i]} onChange={(change) => {\n                                    if (change.target.value >= 0) {\n                                        const changedBy = (change.target.value - points[i]) / (points.length - 1)\n                                        let temp = points\n                                        temp[i] = change.target.value;\n                                        for (let j = 0; j < temp.length; j++) {\n                                            if (i != j) {\n                                                temp[j] -= changedBy\n                                            }\n                                        }\n                                        setPoints(temp);\n                                        updateChart();\n                                    }\n                                }}/>\n                            </div>\n                        </div>)}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nfunction BarChart(props) {\n    const [chart, setChart] = React.useState([])\n    let [points, setPoints] = React.useState(props.data.slice());\n    let index = props.index;\n    const dispatch = useDispatch();\n\n    React.useEffect(() => {\n        updatePoints();\n    }, [])\n\n    function updatePoints() {\n        const maxPoint = points.reduce((p, c) => p > c ? p : c);\n        let temp = []\n        let last_x = 30;\n        points.forEach((e, i) => {\n            temp.push(<rect className={\"bar\"} x={last_x} y={200 - 200 / maxPoint * e} width={10}\n                            height={200 / maxPoint * e}\n                            fill={colors[i]} key={i}></rect>)\n            last_x += 40\n        })\n        setChart(temp)\n    }\n\n    return (\n        <div className={\"chart\"}>\n            <svg width={250} height={200}>\n                <line x1={0} y1={0} x2={0} y2={200} stroke=\"#29364e\" strokeWidth={1}/>\n                <line x1={0} y1={200} x2={250} y2={200} stroke=\"#29364e\" strokeWidth={1}/>\n                {chart.map((e, i) => e)}\n            </svg>\n            <div className={\"tooltip-container\"}>\n                <div className={\"edit-tooltip\"}>\n                    <div>\n                        {points.map((e, i) => <div className={\"eachEdit\"} key={i}>\n                            <div style={{display: \"flex\", alignItems: \"center\", gap: 5, marginBottom: \"0.5rem\"}}>\n                                <div style={{width: '0.7rem', height: '0.7rem', backgroundColor: colors[i]}}></div>\n                                <input type=\"number\" min={0} value={points[i]} onChange={(change) => {\n                                    if (change.target.value >= 0) {\n                                        let temp = points\n                                        temp[i] = change.target.value;\n                                        setPoints(temp);\n                                        updatePoints();\n                                    }\n                                }}/>\n                            </div>\n                        </div>)}\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\nimport dashboardReducer from './chartReducer'\nexport default configureStore({\n    reducer: {\n        dashboard: dashboardReducer\n    },\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./app/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","function polarToCartesian(centerX, centerY, radius, angleInDegrees) {\n    var angleInRadians = (angleInDegrees-90) * Math.PI / 180.0;\n\n    return {\n        x: centerX + (radius * Math.cos(angleInRadians)),\n        y: centerY + (radius * Math.sin(angleInRadians))\n    };\n}\n\nfunction describeArc(x, y, radius, startAngle, endAngle){\n\n    var start = polarToCartesian(x, y, radius, endAngle);\n    var end = polarToCartesian(x, y, radius, startAngle);\n\n    var arcSweep = endAngle - startAngle <= 180 ? \"0\" : \"1\";\n\n    var d = [\n        \"M\", start.x, start.y,\n        \"A\", radius, radius, 0, arcSweep, 0, end.x, end.y,\n        \"L\", x,y,\n        \"L\", start.x, start.y\n    ].join(\" \");\n\n    return d;\n}\n\nmodule.exports = {\n    describeArc: describeArc\n}\n"],"sourceRoot":""}